{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/heinmynn/web/stopjunta/client/src/components/CampaignList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { client } from \"./Parts/Contentful\";\nimport { HCard } from \"./Parts/HCard\";\nimport { FullDate, dateToTime } from \"./Parts/Dates\";\nimport Spinner from \"./Parts/Spinner\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet-async\";\n\nfunction CampaignList(props) {\n  _s();\n\n  const [isLoading, setLoading] = useState(true);\n  const [campaigns, setCampaign] = useState([]);\n  const [isRedirect, setRedirect] = useState(false);\n  const {\n    status\n  } = useParams();\n  useEffect(() => {\n    const d = new Date();\n    const today = new Date(d.getTime() - d.getTimezoneOffset() * 60000).toISOString().slice(0, 10);\n\n    if (status === \"completed\") {\n      client.getEntries({\n        content_type: \"campaign\",\n        \"fields.dateTime[lte]\": today,\n        order: \"-sys.createdAt\"\n      }).then(response => {\n        setCampaign(response.items);\n        setLoading(false);\n      });\n    } else if (status === \"upcoming\") {\n      client.getEntries({\n        content_type: \"campaign\",\n        \"fields.dateTime[gt]\": today,\n        order: \"sys.createdAt\"\n      }).then(response => {\n        setCampaign(response.items);\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n      setRedirect(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full md:max-w-3xl mx-auto items-center justify-center px-2\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Burma Revolution Strike Lists | Burma Spring Revolution 2021\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"a list of revolution strikes during burma spring revolution against military coup.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: \"Strike, myanmar spring revolution, myanmar coup, Silent, Flash Strike\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isRedirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/404\",\n        search: \"?utm=your+face\",\n        state: {\n          comeFrom: \"campaignList\"\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl md:text-3xl font-black text-gray-600 text-center my-4 tracking-wider dark:text-white\",\n      children: [status === \"completed\" ? \"Completed \" : \"Upcoming \", \" Campaigns\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }, this) : \"\", campaigns.map(obj => {\n      const localDate = new Date(obj.fields.dateTime);\n      const date = FullDate(localDate, \"2-digit\", \"short\");\n      const time = dateToTime(localDate);\n      return /*#__PURE__*/_jsxDEV(HCard, {\n        artwork: obj.fields.artwork.fields.file.url,\n        slug: obj.fields.slug,\n        title: obj.fields.title,\n        date: date,\n        time: time,\n        slogan: obj.fields.slogan,\n        desc: obj.fields.description\n      }, obj.sys.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CampaignList, \"x6EsY0x5jlvsy5LfbhvWFI8ww04=\", false, function () {\n  return [useParams];\n});\n\n_c = CampaignList;\nexport default CampaignList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampaignList\");","map":{"version":3,"sources":["/Users/heinmynn/web/stopjunta/client/src/components/CampaignList.js"],"names":["React","useEffect","useState","client","HCard","FullDate","dateToTime","Spinner","useParams","Redirect","Helmet","CampaignList","props","isLoading","setLoading","campaigns","setCampaign","isRedirect","setRedirect","status","d","Date","today","getTime","getTimezoneOffset","toISOString","slice","getEntries","content_type","order","then","response","items","pathname","search","state","comeFrom","map","obj","localDate","fields","dateTime","date","time","artwork","file","url","slug","title","slogan","description","sys","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { client } from \"./Parts/Contentful\";\nimport { HCard } from \"./Parts/HCard\";\nimport { FullDate, dateToTime } from \"./Parts/Dates\";\nimport Spinner from \"./Parts/Spinner\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet-async\";\n\nfunction CampaignList(props) {\n  const [isLoading, setLoading] = useState(true);\n  const [campaigns, setCampaign] = useState([]);\n  const [isRedirect, setRedirect] = useState(false);\n  const { status } = useParams();\n\n  useEffect(() => {\n    const d = new Date();\n    const today = new Date(d.getTime() - d.getTimezoneOffset() * 60000)\n      .toISOString()\n      .slice(0, 10);\n    if (status === \"completed\") {\n      client\n        .getEntries({\n          content_type: \"campaign\",\n          \"fields.dateTime[lte]\": today,\n          order: \"-sys.createdAt\",\n        })\n        .then((response) => {\n          setCampaign(response.items);\n          setLoading(false);\n        });\n    } else if (status === \"upcoming\") {\n      client\n        .getEntries({\n          content_type: \"campaign\",\n          \"fields.dateTime[gt]\": today,\n          order: \"sys.createdAt\",\n        })\n        .then((response) => {\n          setCampaign(response.items);\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n      setRedirect(true);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div className=\"w-full md:max-w-3xl mx-auto items-center justify-center px-2\">\n      <Helmet>\n        <title>\n          Burma Revolution Strike Lists | Burma Spring Revolution 2021\n        </title>\n        <meta\n          name=\"description\"\n          content=\"a list of revolution strikes during burma spring revolution against military coup.\"\n        />\n        <meta\n          name=\"keywords\"\n          content=\"Strike, myanmar spring revolution, myanmar coup, Silent, Flash Strike\"\n        />\n      </Helmet>\n      {isRedirect ? (\n        <Redirect\n          to={{\n            pathname: \"/404\",\n            search: \"?utm=your+face\",\n            state: { comeFrom: \"campaignList\" },\n          }}\n        />\n      ) : null}\n      <h1 className=\"text-xl md:text-3xl font-black text-gray-600 text-center my-4 tracking-wider dark:text-white\">\n        {status === \"completed\" ? \"Completed \" : \"Upcoming \"} Campaigns\n      </h1>\n      {isLoading ? <Spinner /> : \"\"}\n      {campaigns.map((obj) => {\n        const localDate = new Date(obj.fields.dateTime);\n        const date = FullDate(localDate, \"2-digit\", \"short\");\n        const time = dateToTime(localDate);\n        return (\n          <HCard\n            key={obj.sys.id}\n            artwork={obj.fields.artwork.fields.file.url}\n            slug={obj.fields.slug}\n            title={obj.fields.title}\n            date={date}\n            time={time}\n            slogan={obj.fields.slogan}\n            desc={obj.fields.description}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default CampaignList;\n"]},"metadata":{},"sourceType":"module"}