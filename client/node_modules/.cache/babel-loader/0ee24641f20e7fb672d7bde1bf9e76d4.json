{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/heinmynn/web/stopjunta/src/components/PublicShame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Tabletop from \"tabletop\";\nimport { FaSpinner } from \"react-icons/fa\";\n\nfunction PublicShame(props) {\n  _s();\n\n  const [shame, setShame] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  const Spinner = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full fixed block top-0 left-0 bg-white opacity-90 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-green-500 opacity-90 top-1/2 my-0 mx-auto block relative \",\n        children: /*#__PURE__*/_jsxDEV(FaSpinner, {\n          className: \"w-10 h-10 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  };\n\n  function fetchData() {\n    Tabletop.init({\n      key: \"15385WjhOZcBxyWOfaiHCBafJ17wXZlCtQIC61xuI1ao\",\n      callback: googleData => {\n        setShame(googleData);\n        setLoading(false);\n      },\n      simpleSheet: true\n    });\n  }\n\n  useEffect(() => {\n    if (search === \"\") {\n      fetchData();\n    }\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is public shaming list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PublicShame, \"zWO3ICRh+khWUYQP34Tgp9nwSO8=\");\n\n_c = PublicShame;\nexport default PublicShame;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicShame\");","map":{"version":3,"sources":["/Users/heinmynn/web/stopjunta/src/components/PublicShame.js"],"names":["React","useEffect","useState","Tabletop","FaSpinner","PublicShame","props","shame","setShame","isLoading","setLoading","Spinner","fetchData","init","key","callback","googleData","simpleSheet","search"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,UAAZ,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMS,OAAO,GAAG,MAAM;AACpB,wBACE;AAAK,MAAA,SAAS,EAAC,iEAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,gEAAhB;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARD;;AAUA,WAASC,SAAT,GAAqB;AACnBT,IAAAA,QAAQ,CAACU,IAAT,CAAc;AACZC,MAAAA,GAAG,EAAE,8CADO;AAEZC,MAAAA,QAAQ,EAAGC,UAAD,IAAgB;AACxBR,QAAAA,QAAQ,CAACQ,UAAD,CAAR;AACAN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OALW;AAMZO,MAAAA,WAAW,EAAE;AAND,KAAd;AAQD;;AACDhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,MAAM,KAAK,EAAf,EAAmB;AACjBN,MAAAA,SAAS;AACV;AACF,GAJQ,EAIN,CAACM,MAAD,CAJM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlCQb,W;;KAAAA,W;AAoCT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Tabletop from \"tabletop\";\nimport { FaSpinner } from \"react-icons/fa\";\n\nfunction PublicShame(props) {\n  const [shame, setShame] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  const Spinner = () => {\n    return (\n      <div className=\"w-full h-full fixed block top-0 left-0 bg-white opacity-90 z-50\">\n        <span className=\"text-green-500 opacity-90 top-1/2 my-0 mx-auto block relative \">\n          <FaSpinner className=\"w-10 h-10 mx-auto\" />\n        </span>\n      </div>\n    );\n  };\n\n  function fetchData() {\n    Tabletop.init({\n      key: \"15385WjhOZcBxyWOfaiHCBafJ17wXZlCtQIC61xuI1ao\",\n      callback: (googleData) => {\n        setShame(googleData);\n        setLoading(false);\n      },\n      simpleSheet: true,\n    });\n  }\n  useEffect(() => {\n    if (search === \"\") {\n      fetchData();\n    }\n  }, [search]);\n  return (\n    <div>\n      <div>This is public shaming list</div>\n    </div>\n  );\n}\n\nexport default PublicShame;\n"]},"metadata":{},"sourceType":"module"}